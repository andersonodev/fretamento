#!/usr/bin/env python3
"""
Teste para verificar formata√ß√£o condicional das colunas Rent na exporta√ß√£o mensal
"""

import os
import sys
import django
from pathlib import Path

# Configurar Django
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fretamento_project.settings')
django.setup()

from openpyxl import load_workbook
from escalas.models import Escala
from escalas.services import ExportadorEscalas
from datetime import date
import tempfile

def testar_formatacao_condicional_mensal():
    """Testa formata√ß√£o condicional na exporta√ß√£o mensal"""
    
    print("üóìÔ∏è Testando formata√ß√£o condicional na exporta√ß√£o mensal...")
    
    try:
        # Buscar escalas existentes
        escalas = Escala.objects.all()[:3]  # Pegar algumas escalas
        
        if not escalas:
            print("‚ùå Nenhuma escala encontrada no banco de dados")
            return False
        
        print(f"üìÖ Testando {len(escalas)} escalas")
        
        # Exportar para Excel mensal
        exportador = ExportadorEscalas()
        excel_data = exportador.exportar_mes_para_excel(escalas)
        
        # Salvar em arquivo tempor√°rio
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(excel_data)
            temp_filename = tmp_file.name
        
        # Carregar o arquivo Excel para an√°lise
        wb = load_workbook(temp_filename)
        ws = wb.active
        
        print(f"üìä Analisando arquivo Excel mensal: {ws.title}")
        
        # Verificar regras de formata√ß√£o condicional
        conditional_rules = ws.conditional_formatting
        print(f"üîç Regras de formata√ß√£o condicional encontradas: {len(conditional_rules)}")
        
        for i, cf_rule in enumerate(conditional_rules):
            print(f"   üìã Regra {i+1}: {cf_rule.sqref}")
        
        # Verificar c√©lulas de Rent (coluna O)
        rent_cells_count = 0
        for row in range(2, min(ws.max_row + 1, 100)):  # Limitar para an√°lise
            cell = ws.cell(row=row, column=15)  # Coluna O
            
            if cell.value and str(cell.value).startswith('=SUM'):
                rent_cells_count += 1
        
        print(f"üßÆ C√©lulas Rent encontradas: {rent_cells_count}")
        
        # Limpar arquivo tempor√°rio
        os.unlink(temp_filename)
        
        print(f"\nüéØ TESTE MENSAL CONCLU√çDO:")
        print(f"   ‚úÖ Formata√ß√£o condicional aplicada na exporta√ß√£o mensal!")
        print(f"   üìä {len(conditional_rules)} regras de formata√ß√£o")
        print(f"   üßÆ {rent_cells_count} c√©lulas Rent identificadas")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante o teste: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    sucesso = testar_formatacao_condicional_mensal()
    if sucesso:
        print("\nüéâ Teste mensal de formata√ß√£o condicional realizado com sucesso!")
    else:
        print("\nüí• Falha no teste mensal de formata√ß√£o condicional!")