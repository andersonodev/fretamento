#!/bin/bash
# Script para aplicar migra√ß√£o assim que Heroku estabilizar
# Execute: bash apply_migration.sh

echo "üîç Monitorando disponibilidade do Heroku..."
echo "Pressione Ctrl+C para cancelar"
echo ""

attempt=1
max_attempts=20
sleep_time=120  # 2 minutos entre tentativas

while [ $attempt -le $max_attempts ]; do
    echo "Tentativa $attempt/$max_attempts - $(date '+%H:%M:%S')"
    
    # Tenta executar a migra√ß√£o
    if heroku run python manage.py migrate -a fretamento-intertouring 2>&1 | grep -q "Operations to perform"; then
        echo ""
        echo "‚úÖ Migra√ß√£o aplicada com sucesso!"
        echo "Os 11 √≠ndices de performance foram criados no banco de dados."
        echo ""
        echo "Sistema agora est√° 100% otimizado! üöÄ"
        exit 0
    fi
    
    if [ $attempt -lt $max_attempts ]; then
        echo "‚è≥ Heroku ainda indispon√≠vel. Aguardando $sleep_time segundos..."
        echo ""
        sleep $sleep_time
    fi
    
    attempt=$((attempt + 1))
done

echo ""
echo "‚ö†Ô∏è  Heroku ainda est√° com problemas ap√≥s $max_attempts tentativas."
echo "Aplique a migra√ß√£o manualmente quando o servi√ßo normalizar:"
echo "  heroku run python manage.py migrate -a fretamento-intertouring"
echo ""
echo "Acompanhe o status em: https://status.heroku.com"
