name: üìö Deploy MkDocs to GitHub Pages

on:
  # Executa no push para main
  push:
    branches: 
      - main
      - master
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
      - 'mkdocs.yml'
      - 'README.md'
  
  # Permite execu√ß√£o manual
  workflow_dispatch:

# Define permiss√µes para o GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deploy simult√¢neo
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    name: üî® Build Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-mermaid2-plugin
          pip install pymdown-extensions
          pip install mkdocs-git-revision-date-localized-plugin
          pip install mkdocs-git-committers-plugin-2
          pip install mkdocs-awesome-pages-plugin
          pip install mkdocs-redirects
      
      - name: üìä Validate MkDocs config
        run: |
          cd docs
          mkdocs --version
          mkdocs config
      
      - name: üî® Build MkDocs site
        run: |
          cd docs
          mkdocs build --verbose --clean --strict
      
      - name: üìã List generated files
        run: |
          cd docs
          ls -la site/
          echo "Total files: $(find site/ -type f | wc -l)"
      
      - name: üì§ Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/site

  # Job de deploy
  deploy:
    name: üöÄ Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: üöÄ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: üìä Deployment Summary
        run: |
          echo "## üéâ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üìö **Documentation URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [üìö Documenta√ß√£o](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
          echo "- [üèóÔ∏è Arquitetura](${{ steps.deployment.outputs.page_url }}architecture/)" >> $GITHUB_STEP_SUMMARY
          echo "- [üë§ Guia do Usu√°rio](${{ steps.deployment.outputs.page_url }}user-guide/)" >> $GITHUB_STEP_SUMMARY
          echo "- [üîß Manual T√©cnico](${{ steps.deployment.outputs.page_url }}technical/)" >> $GITHUB_STEP_SUMMARY

  # Job de notifica√ß√£o (opcional)
  notify:
    name: üì¢ Notify Deployment
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
      - name: üì¢ Create deployment notification
        run: |
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "‚úÖ Documentation deployed successfully!"
            echo "URL: https://andersonodev.github.io/fretamento-intertouring/"
          else
            echo "‚ùå Documentation deployment failed!"
            exit 1
          fi